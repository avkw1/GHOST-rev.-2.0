;------------------------------------------------------------------------------
; Инициализация процессора
;------------------------------------------------------------------------------
.macro INIT_MCU
    ; Выключение аналогового компаратора
    sbi ACSR,ACD
    ; Разрешить спящий режим
    ldi tmp1,(1<<SE)
    out MCUCR,tmp1
    ; Инициализация прерываний от входов
    ldi tmp1,(1<<PCIE)
    out GIMSK,tmp1
    ser tmp1
    out PCMSK,tmp1                  ; Все биты порта B
.endm

;------------------------------------------------------------------------------
; Инициализация таймера
;------------------------------------------------------------------------------
.macro INIT_TIMER
    ldi tmp2,HIGH(OCR1A_VALUE)
    ldi tmp1,LOW(OCR1A_VALUE)       ; Период 2 мс
    out OCR1AH,tmp2
    out OCR1AL,tmp1
    ldi tmp2,HIGH(OCR1B_VALUE)
    ldi tmp1,LOW(OCR1B_VALUE)       ; 1800 мкс
    out OCR1BH,tmp2
    out OCR1BL,tmp1
    ldi tmp1,(1<<WGM12)|(1<<CS11)   ; CTC mode, FOSC/8
    out TCCR1B,tmp1
    ldi tmp1,(1<<OCIE1A)|(1<<OCIE1B)
    out TIMSK,tmp1                  ; Вкл. нужные прерывания таймеров
.endm

;------------------------------------------------------------------------------
; Сброс таймера
;------------------------------------------------------------------------------
.macro TIMER_RESET
    ldi tmp1,(1<<PSR10)
    out GTCCR,tmp1                  ; Сброс делителя частоты
    out TCNT1H,zero                 ; Сброс счетчика таймера
    out TCNT1L,zero
    ser tmp1
    out TIFR,tmp1                   ; Сбросить флаги прерываний от таймеров
.endm

;------------------------------------------------------------------------------
; Ожидание таймера
;------------------------------------------------------------------------------
.macro TIMER_WAIT
    in tmp1,TIFR
    sbrs tmp1,OCF1A
    rjmp PC-2
    out TIFR,tmp1                   ; Сбросить флаги прерываний от таймера
.endm

;------------------------------------------------------------------------------
; Инициализация USART
;------------------------------------------------------------------------------
.macro INIT_USART
    tst r_address                   ; Пропустить инициализацию, если адрес = 0
    breq __miu_end
    ldi tmp1,UBRR_VALUE
    out UBRRL,tmp1
    ldi tmp1,(1<<UCSZ1)|(1<<UCSZ0)
    out UCSRC,tmp1
    rcall usart_reset_proc          ; Уст. начальное состояние UART
__miu_end:
.endm

;------------------------------------------------------------------------------
; Переключение в режим передачи
;------------------------------------------------------------------------------
.macro SET_TX
    sbi DIRSW_PORT,DIRSW_BIT
.endm

;------------------------------------------------------------------------------
; Переключение в режим приёма
;------------------------------------------------------------------------------
.macro SET_RX
    cbi DIRSW_PORT,DIRSW_BIT
.endm

;------------------------------------------------------------------------------
; Отправка байта
;------------------------------------------------------------------------------
; tmp1 = байт
.macro USART_TX
    sbis UCSRA,UDRE                 ; Ждать освобождения места в буфере
    rjmp PC-1
    out UDR,tmp1
.endm

;------------------------------------------------------------------------------
; Ожидание завершения передачи
;------------------------------------------------------------------------------
.macro USART_WAIT_TX
    sbis UCSRA,TXC
    rjmp PC-1
    sbi UCSRA,TXC                   ; Сбросить флаг TXC
.endm

;------------------------------------------------------------------------------
; Макросы для управления прерываниями USART
;------------------------------------------------------------------------------
.macro RXCIE_OFF
    cbi UCSRB,RXCIE
.endm

.macro RXCIE_ON
    sbi UCSRB,RXCIE
.endm

.macro UDRIE_OFF
    cbi UCSRB,UDRIE
.endm

.macro UDRIE_ON
    sbi UCSRB,UDRIE
.endm

.macro TXCIE_OFF
    cbi UCSRB,TXCIE
.endm

.macro TXCIE_ON
    sbi UCSRB,TXCIE
.endm

;------------------------------------------------------------------------------
; Чтение 1 байта EEPROM
;------------------------------------------------------------------------------
; вход: ZL -> адрес EEPROM
; выход: tmp1 - прочитанный байт
.macro EEPROM_RD
;   sbic EECR,EEPE                  ;Ждать завершения предыдущей записи
;   rjmp PC-1
    out EEAR,ZL                     ;Записать адрес в регистр EEAR
    sbi EECR,EERE                   ;Команда чтения
    in tmp1,EEDR                    ;Чтение байта из EEDR
.endm
